{"version":3,"sources":["App/variables.ts","App/components/Content/components/JournalList/components/Journal/components/EntryEditor/EntryEditor.tsx","components/Spacer/Spacer.tsx","App/components/Content/components/JournalList/components/Journal/Journal.tsx","App/components/Content/components/JournalList/JournalList.tsx","App/types.ts","App/components/Content/Content.tsx","App/components/Footer/Footer.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["COLOR","1","2","3","4","5","6","7","8","9","10","Background","styled","div","height","backgroundColor","display","flexDirection","justifyContent","alignItems","EntryEditor","react_default","a","createElement","Spacer","_ref","paddingTop","top","paddingRight","right","paddingBottom","bottom","paddingLeft","left","defaultProps","Entry","boxShadow","flex",":first-of-type","borderTopLeftRadius","borderBottomLeftRadius",":last-child","borderTopRightRadius","borderBottomRightRadius","entry","status","EntryList","Journal","_ref2","journal","_useState","useState","_useState2","Object","slicedToArray","showEntryEditor","setShowEntryEditor","recentEntries","Array","fill","undefined","map","_","idx","date","daysAgo","today","Date","dateDaysAgo","setDate","getDate","toISOString","slice","getDateOfDaysAgo","entries","find","onClick","name","_ref3","data-testid","concat","key","Spacer_Spacer","components_EntryEditor_EntryEditor","HeaderBackground","borderBottom","Padding","padding",">*","JournalList","journalList","jn","components_Journal_Journal","id","entryFactory","Factory","makeFactory","i","journalFactory","aguid","Content","className","components_JournalList_JournalList","build","borderTop","Footer","Footer_Background","FixedHeightContent","FixedHeightFooter","App","Fragment","core_browser_esm","styles","body","margin","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","react_div_100vh_lib_default","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7fa5c992.chunk.js","sourcesContent":["const BASE_SIZING_UNIT_PIXELS = 8\n\nexport const COLOR = {\n  // taken from https://ant.design/docs/spec/colors\n  GREY: {\n    1: \"#ffffff\",\n    2: \"#fafafa\",\n    3: \"#f5f5f5\",\n    4: \"#e8e8e8\",\n    5: \"#d9d9d9\",\n    6: \"#bfbfbf\",\n    7: \"#8c8c8c\",\n    8: \"#595959\",\n    9: \"#262626\",\n    10: \"#000000\",\n  },\n  GREEN: {\n    1: \"#f6ffed\",\n    2: \"#d9f7be\",\n    3: \"#b7eb8f\",\n    4: \"#95de64\",\n    5: \"#73d13d\",\n    6: \"#52c41a\",\n    7: \"#389e0d\",\n    8: \"#237804\",\n    9: \"#135200\",\n    10: \"#092b00\",\n  },\n  RED: {\n    1: \"#fff1f0\",\n    2: \"#ffccc7\",\n    3: \"#ffa39e\",\n    4: \"#ff7875\",\n    5: \"#ff4d4f\",\n    6: \"#f5222d\",\n    7: \"#cf1322\",\n    8: \"#a8071a\",\n    9: \"#820014\",\n    10: \"#5c0011\",\n  },\n}\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { COLOR } from \"../../../../../../../../variables\"\n\nconst Background = styled.div({\n  height: \"56px\",\n  backgroundColor: COLOR.GREY[6],\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n})\n\nconst EntryEditor = () => (\n  <Background>\n    <button>Yes</button>\n    <button>No</button>\n  </Background>\n)\n\nexport default EntryEditor\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\n/* prettier breaks this code somehow */\n/* TODO: investigate */\n// prettier-ignore\ntype Props = {\n  top?: string,\n  right?: string,\n  bottom?: string,\n  left?: string,\n}\n\nconst Spacer = styled.div(({ top, right, bottom, left }: Props) => ({\n  paddingTop: top,\n  paddingRight: right,\n  paddingBottom: bottom,\n  paddingLeft: left,\n}))\n\nSpacer.defaultProps = {\n  top: \"0\",\n  right: \"0\",\n  bottom: \"0\",\n  left: \"0\",\n}\n\nexport default Spacer\n","import React, { useState } from \"react\"\nimport styled from \"@emotion/styled\"\nimport EntryEditor from \"./components/EntryEditor/EntryEditor\"\nimport { COLOR } from \"../../../../../../variables\"\nimport { Journal as JournalType, Entry as EntryType } from \"../../../../../../types\"\nimport Spacer from \"../../../../../../../components/Spacer/Spacer\"\n\ntype EntryProps = {\n  entry: EntryType | undefined\n}\n\nconst Entry = styled.div(\n  {\n    height: \"24px\",\n    boxShadow: \"inset 0 0 1px #000000\",\n    flex: 1,\n    \":first-of-type\": {\n      borderTopLeftRadius: \"4px\",\n      borderBottomLeftRadius: \"4px\",\n    },\n    \":last-child\": {\n      borderTopRightRadius: \"4px\",\n      borderBottomRightRadius: \"4px\",\n    },\n  },\n  ({ entry }: EntryProps) => ({\n    backgroundColor: entry && entry.status === \"SUCCEEDED\" ? COLOR.GREEN[5] : COLOR.RED[5],\n  }),\n)\n\nconst EntryList = styled.div({\n  paddingTop: \"8px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n})\n\nconst NUMBER_OF_ENTRIES_SHOWN = 7\n\nconst getDateOfDaysAgo = (daysAgo: number) => {\n  const today = new Date()\n  const dateDaysAgo = new Date()\n  dateDaysAgo.setDate(today.getDate() - daysAgo)\n  return dateDaysAgo.toISOString().slice(0, 10)\n}\n\ntype Props = {\n  journal: JournalType\n}\n\nconst Journal = ({ journal }: Props) => {\n  const [showEntryEditor, setShowEntryEditor] = useState(false)\n\n  const recentEntries = new Array(NUMBER_OF_ENTRIES_SHOWN).fill(undefined).map((_, idx) => {\n    const date = getDateOfDaysAgo(idx)\n    const entry = journal.entries.find(entry => entry.date === date)\n    return {\n      date,\n      entry,\n    }\n  })\n  return (\n    <div>\n      <div onClick={() => setShowEntryEditor(!showEntryEditor)}>\n        <span>{journal.name}</span>\n        <EntryList>\n          {recentEntries.map(({ entry, date }) => (\n            <Entry\n              data-testid={`Entry-${date}-${\n                entry && entry.status === \"SUCCEEDED\" ? \"Succeeded\" : \"Failed\"\n              }`}\n              key={date}\n              entry={entry}\n            />\n          ))}\n        </EntryList>\n      </div>\n      {showEntryEditor && (\n        <Spacer top=\"16px\">\n          <EntryEditor />\n        </Spacer>\n      )}\n    </div>\n  )\n}\n\nexport default Journal\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport Journal from \"./components/Journal/Journal\"\nimport { COLOR } from \"../../../../variables\"\nimport { Journal as JournalType } from \"../../../../types\"\n\nconst HeaderBackground = styled.div({\n  paddingLeft: \"8px\",\n  paddingRight: \"8px\",\n  borderBottom: `1px solid ${COLOR.GREY[4]}`,\n  backgroundColor: COLOR.GREY[2],\n  height: \"56px\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n})\n\nconst Padding = styled.div({\n  padding: \"8px\",\n  \">*\": {\n    paddingBottom: \"24px\",\n  },\n})\n\ntype Props = {\n  journalList: Array<JournalType>\n}\n\nconst JournalList = ({ journalList }: Props) => (\n  <div>\n    <HeaderBackground>\n      <button>Edit</button>\n      <button>Add</button>\n    </HeaderBackground>\n    <Padding>\n      {journalList.map(jn => (\n        <Journal key={jn.id} journal={jn} />\n      ))}\n    </Padding>\n  </div>\n)\n\nexport default JournalList\n","import * as Factory from \"factory.ts\"\nimport aguid from \"aguid\"\n\n/* prettier breaks this code somehow */\n/* TODO: investigate */\n// prettier-ignore\nexport type Entry = {\n  date: string,\n  status: \"SUCCEEDED\" | \"FAILED\",\n}\n\nexport const entryFactory = Factory.Sync.makeFactory<Entry>({\n  date: Factory.each(i => new Date().toISOString().slice(0, 10)),\n  status: \"SUCCEEDED\",\n})\n\n/* prettier breaks this code somehow */\n/* TODO: investigate */\n// prettier-ignore\nexport type Journal = {\n  id: string,\n  name: string,\n  entries: Array<Entry>,\n}\n\nexport const journalFactory = Factory.Sync.makeFactory<Journal>({\n  id: Factory.each(i => aguid(`${i}`)),\n  name: \"create oss pr\",\n  entries: [],\n})\n","import React from \"react\"\nimport JournalList from \"./components/JournalList/JournalList\"\nimport { journalFactory, entryFactory } from \"../../types\"\n\ninterface Props {\n  className?: string\n}\n\nconst Content = ({ className }: Props) => (\n  <div className={className}>\n    <JournalList\n      journalList={[\n        journalFactory.build({\n          entries: [entryFactory.build()],\n        }),\n      ]}\n    />\n  </div>\n)\n\nexport default Content\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { COLOR } from \"../../variables\"\n\ninterface Props {\n  className?: string\n}\n\nconst Background = styled.div({\n  paddingLeft: \"8px\",\n  paddingRight: \"8px\",\n  borderTop: `1px solid ${COLOR.GREY[4]}`,\n  backgroundColor: COLOR.GREY[2],\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n})\n\nconst Footer = ({ className }: Props) => (\n  <Background className={className}>\n    <button>Journals</button>\n  </Background>\n)\n\nexport default Footer\n","import React from \"react\"\nimport Content from \"./components/Content/Content\"\nimport Footer from \"./components/Footer/Footer\"\nimport { Global } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\nimport Div100vh from \"react-div-100vh\"\n\nconst FOOTER_HEIGHT = \"56px\"\n\nconst FixedHeightContent = styled(Content)({\n  height: `calc(100% - ${FOOTER_HEIGHT})`,\n})\n\nconst FixedHeightFooter = styled(Footer)({\n  height: FOOTER_HEIGHT,\n})\n\nconst App = () => (\n  <React.Fragment>\n    <Global\n      styles={{\n        body: {\n          margin: 0,\n          padding: 0,\n          fontFamily:\n            \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n          WebkitFontSmoothing: \"antialiased\",\n          MozOsxFontSmoothing: \"grayscale\",\n        },\n      }}\n    />\n    <Div100vh>\n      <FixedHeightContent />\n      <FixedHeightFooter />\n    </Div100vh>\n  </React.Fragment>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App/App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}